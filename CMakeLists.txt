cmake_minimum_required(VERSION 3.2)
project(plus_project)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Wall")
#set(GMOCK_DIR "/usr/src/googletest")
#add_subdirectory(${GMOCK_DIR} ${CMAKE_BINARY_DIR}/googlegmock)
#include_directories(SYSTEM ${GMOCK_DIR}/include ${GMOCK_DIR}/gtest/include)
#include_directories(${GMOCK_INCLUDE_DIRS})
#add_library(st_lib STATIC ${SOURCES})
#include_directories(SYSTEM ${GMOCK_DIR}/include ${GMOCK_DIR}/gtest/include)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
find_package(Boost REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})
find_package(Threads REQUIRED)
set(SOURCE nlohmann/json.hpp
        src/CommonChatView.cpp src/MessageChatView.cpp src/UserChatView.cpp include/ResponseCreater.h include/View.h)
include_directories(include)
include_directories(nlohmann)
#add_executable(server ${SOURCE})
#target_sources(server PUBLIC src/chat_server.cpp)
link_libraries(mysqlcppconn Threads::Threads ${Boost_LIBRARIES})
############test generate
find_package(GTest REQUIRED)
add_executable(Test tests/tests.cpp)
target_include_directories(Test PUBLIC ${GTEST_INCLUDE_DIRS})
target_link_libraries(Test PUBLIC ${GTEST_LIBRARIES} Threads::Threads)
include_directories(/usr/include/cppconn)
#link_directories(/usr/lib)
#set(SOURCE_FILES connector.cpp)
#add_executable(MyProg ${SOURCE_FILES})
#target_link_libraries(MyProg mysqlcppconn)