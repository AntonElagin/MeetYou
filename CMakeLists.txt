cmake_minimum_required(VERSION 3.2)
project(plus_project)
#set(GMOCK_DIR "/usr/src/googletest")
#add_subdirectory(${GMOCK_DIR} ${CMAKE_BINARY_DIR}/googlegmock)
#include_directories(SYSTEM ${GMOCK_DIR}/include ${GMOCK_DIR}/gtest/include)
#include_directories(${GMOCK_INCLUDE_DIRS})
#set(SOURCES accept_actions.cpp basic_classes.cpp handler_classes.cpp router.cpp validator.cpp chat.cpp)
#add_library(st_lib STATIC ${SOURCES})
#include_directories(SYSTEM ${GMOCK_DIR}/include ${GMOCK_DIR}/gtest/include)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost 1.71.0 COMPONENTS regex)
if (Boost_FOUND)
    add_executable(progname src/connector.cpp)
    add_executable(testing src/for_worktesting.cpp)
    target_link_libraries(testing Boost::regex)
endif ()
add_executable(server src/chat_server.cpp src/router.cpp src/handler_classes.cpp)
target_link_libraries(server pthread mysqlcppconn)
#find_package(GTest REQUIRED)
#include_directories(${GTEST_INCLUDE_DIRS})
#add_executable(tests_gtest test.cpp)
#target_link_libraries(tests_gtest PUBLIC ${GTEST_LIBRARIES} pthread st_lib)
#add_definitions(-std=c++11)
include_directories(/usr/include/cppconn)
link_directories(/usr/lib)
#set(SOURCE_FILES connector.cpp)
#add_executable(MyProg ${SOURCE_FILES})
#target_link_libraries(MyProg mysqlcppconn)