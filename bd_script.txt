create schema if not exists MeetYouTest collate latin1_swedish_ci;

create table if not exists user
(
	id int auto_increment,
	email varchar(70) null,
	password varchar(50) null,
	login varchar(45) null,
	name varchar(45) null,
	surname varchar(45) null,
	sex varchar(5) null,
	birthday date null,
	location varchar(45) null,
	constraint email_UNIQUE
		unique (email),
	constraint id_UNIQUE
		unique (id),
	constraint login_UNIQUE
		unique (login)
);

alter table user
	add primary key (id);

create table if not exists event
(
	id int auto_increment,
	name varchar(45) null,
	type varchar(45) null,
	description tinytext null,
	date date null,
	admin int null,
	constraint id_UNIQUE
		unique (id),
	constraint name_UNIQUE
		unique (name),
	constraint admin_fk
		foreign key (admin) references user (id)
			on update cascade on delete cascade
);

create index admin_fk_idx
	on event (admin);

alter table event
	add primary key (id);

create table if not exists eventhobby
(
	id int auto_increment,
	event_id int not null,
	hobby varchar(100) null,
	constraint id_UNIQUE
		unique (id),
	constraint event_fk
		foreign key (event_id) references event (id)
			on update cascade on delete cascade
);

alter table eventhobby
	add primary key (id);

create table if not exists followers
(
	id int auto_increment,
	user_id int not null,
	event_id int not null,
	constraint id_UNIQUE
		unique (id),
	constraint event_id_fk
		foreign key (event_id) references event (id),
	constraint user_id_fk
		foreign key (user_id) references user (id)
			on update cascade on delete cascade
);

create index event_id_fk_idx
	on followers (event_id);

create index user_id_fk_idx
	on followers (user_id);

alter table followers
	add primary key (id);

create table if not exists token
(
	id int auto_increment
		primary key,
	user_id int not null,
	token varchar(50) not null,
	time datetime null,
	ip varchar(45) null,
	constraint token_token_uindex
		unique (token),
	constraint token_user_id_fk
		foreign key (user_id) references user (id)
			on update cascade on delete cascade
);

create index token_user_id_fk_idx
	on token (user_id);

create index user_id_fk_idx
	on token (user_id);

create table if not exists userfollowers
(
	id int auto_increment,
	idol_id int null,
	user_id int null,
	constraint id_UNIQUE
		unique (id),
	constraint idol_fk
		foreign key (idol_id) references user (id)
			on update cascade on delete cascade,
	constraint user_fk
		foreign key (user_id) references user (id)
			on update cascade on delete cascade
);

create index idol_fk_idx
	on userfollowers (idol_id);

create index idol_id_fk_idx
	on userfollowers (idol_id);

create index user_fk_idx
	on userfollowers (user_id);

create index userfollow_user_fk_idx
	on userfollowers (user_id);

alter table userfollowers
	add primary key (id);

create table if not exists userhobby
(
	id int auto_increment,
	user_id int null,
	hobby varchar(100) null,
	constraint id_UNIQUE
		unique (id),
	constraint userhobby_user_fk
		foreign key (user_id) references user (id)
			on update cascade on delete cascade
);

create index userhobby_user_fk_idx
	on userhobby (user_id);

alter table userhobby
	add primary key (id);

